{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","databaseURL","firebaseInstance","authService","dbService","storageService","i","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","key","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dced1ad6.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\n\nconst inputStyles = {};\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit} className='container'>\n        <input\n          name='email'\n          type='email'\n          placeholder='Email'\n          required\n          value={email}\n          onChange={onChange}\n          className='authInput'\n        />\n        <input\n          name='password'\n          type='password'\n          placeholder='Password'\n          required\n          value={password}\n          className='authInput'\n          onChange={onChange}\n        />\n        <input\n          type='submit'\n          className='authInput authSubmit'\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n        />\n        {error && <span className='authError'>{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className='authSwitch'>\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\nexport default AuthForm;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n  return (\n    <div className='authContainer'>\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size='3x'\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className='authBtns'>\n        <button onClick={onSocialClick} name='google' className='authBtn'>\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name='github' className='authBtn'>\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n  return (\n    <div className='nweet'>\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className='container nweetEdit'>\n            <input\n              type='text'\n              placeholder='Edit your nweet'\n              value={newNweet}\n              required\n              autoFocus\n              onChange={onChange}\n              className='formInput'\n            />\n            <input type='submit' value='Update Nweet' className='formBtn' />\n          </form>\n          <span onClick={toggleEditing} className='formBtn cancelBtn'>\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\n          {isOwner && (\n            <div className='nweet__actions'>\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { storageService, dbService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async (event) => {\n    if (nweet === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"nweets\").add(nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment(\"\");\n  return (\n    <form onSubmit={onSubmit} className='factoryForm'>\n      <div className='factoryInput__container'>\n        <input\n          className='factoryInput__input'\n          value={nweet}\n          onChange={onChange}\n          type='text'\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type='submit' value='&rarr;' className='factoryInput__arrow' />\n      </div>\n      <label htmlFor='attach-file' className='factoryInput__label'>\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id='attach-file'\n        type='file'\n        accept='image/*'\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n\n      {attachment && (\n        <div className='factoryForm__attachment'>\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className='factoryForm__clear' onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\nexport default NweetFactory;\n","import React, { useState, useEffect } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [nweets, setNweets] = useState([]);\n  const [attachment, setAttachment] = useState(\"\");\n  useEffect(() => {\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n  return (\n    <div className='container'>\n      <NweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n  return (\n    <div className='container'>\n      <form onSubmit={onSubmit} className='profileForm'>\n        <input\n          onChange={onChange}\n          type='text'\n          placeholder='Display name'\n          value={newDisplayName}\n          className='formInput'\n        />\n        <input\n          type='submit'\n          value='Update Profile'\n          className='formBtn'\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className='formBtn cancelBtn logOut' onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to='/' style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size='2x' />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to='/profile'\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}>\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size='2x' />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\nexport default Navigation;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}>\n            <Route exact path='/'>\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path='/profile'>\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ) : (\n          <>\n            <Route exact path='/'>\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\nexport default AppRouter;\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}